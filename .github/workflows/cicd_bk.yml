

# Main Workflow File: python-applications.yml

name: Python-applications

on:
  push:
    branches: [ "main" ]





jobs:
  lint_test:
    name: Lint Test
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"

  py_test:
    name: Pytest
    needs: lint_test
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"


  snyk_scan:
    name: Snyk Scan
    needs: [lint_test, py_test]
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"
      dockerfile-path: "Dockerfile"
      ecr-repo-name: "python"
      ECR_REGISTRY: "022499010678.dkr.ecr.us-east-1.amazonaws.com"
      IMAGE_NAME: "python"
      IMAGE_TAG: "latest"
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  docker_build:
    name: Docker Build
    needs: [lint_test, py_test, snyk_scan]
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"
      dockerfile-path: "Dockerfile"
      ecr-repo-name: "python"
      ECR_REGISTRY: "022499010678.dkr.ecr.us-east-1.amazonaws.com"
      IMAGE_NAME: "python"
      IMAGE_TAG: "latest"
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  snyk_image_scan:
    name: Snyk Image Scan
    needs: docker_build
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"
      dockerfile-path: "Dockerfile"
      ecr-repo-name: "python"
      ECR_REGISTRY: "022499010678.dkr.ecr.us-east-1.amazonaws.com"
      IMAGE_NAME: "python"
      IMAGE_TAG: "latest"
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  publish:
    name: Publish to ECR
    needs: snyk_image_scan
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"
      dockerfile-path: "Dockerfile"
      ecr-repo-name: "python"
      ECR_REGISTRY: "022499010678.dkr.ecr.us-east-1.amazonaws.com"
      IMAGE_NAME: "python"
      IMAGE_TAG: "latest"
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  deploy:
    name: Deploy on EC2
    needs: publish
    uses: arjunpt/python-reusable-cicd/.github/workflows/cicd.yml@main
    with:
      python-version: "3.10"
      requirements-path: "src/requirements.txt"
      test-path: "src/test/test.py"
      dockerfile-path: "Dockerfile"
      ecr-repo-name: "python"
      ECR_REGISTRY: "022499010678.dkr.ecr.us-east-1.amazonaws.com"
      IMAGE_NAME: "python"
      IMAGE_TAG: "latest"
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
